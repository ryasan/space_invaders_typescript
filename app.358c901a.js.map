{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","ts/utils.ts","ts/player-bullet.ts","ts/player.ts","ts/invader-bullet.ts","ts/invader.ts","ts/invaders.ts","ts/state.ts","ts/controls.ts","ts/app.ts"],"names":[],"mappings":"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","file":"app.358c901a.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const rectOf = (el: Element): any => {\n    return el.getBoundingClientRect();\n};\n\nexport const sleep = (ms = 0): Promise<void> => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n};\n\nexport const random = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min + 1));\n};\n\ninterface Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport const checkCollision = (r1: Rect, r2: Rect): boolean => {\n    return !!(\n        r2.width &&\n        r1.x + r1.width >= r2.x &&\n        r1.x <= r2.x + r2.width &&\n        r1.y + r1.height >= r2.y &&\n        r1.y <= r2.y + r2.height\n    );\n};\n","import { earth, state, player, invaders } from './app';\nimport { rectOf, checkCollision } from './utils';\n\nclass PlayerBullet {\n    node = document.createElement('div');\n    bullets: PlayerBullet[];\n\n    constructor (x: number, bullets: PlayerBullet[]) {\n        this.node.className = 'bullet';\n        this.node.style.cssText = `top: 0; left: ${x}px`;\n        this.bullets = bullets;\n    }\n\n    remove = (): void => {\n        this.bullets.splice(this.bullets.indexOf(this), 1);\n        this.node.remove();\n    };\n\n    checkForHitOnInvader = (): void => {\n        const rect1 = rectOf(this.node);\n        let invader: any;\n\n        for (const i in invaders.matrix) {\n            for (const j in invaders.matrix) {\n                invader = invaders.matrix[i][j];\n                const rect2 = invader ? rectOf(invader.element()) : null;\n\n                // prettier-ignore\n                if (invader && checkCollision(rect1, rect2)) {\n                    this.remove();\n                    player.scorePoints();\n                    invaders.removeInvader(invader);\n                }\n\n                if (this.node.offsetTop <= -earth.offsetHeight) {\n                    this.remove();\n                }\n            }\n        }\n    };\n\n    update = (): void => {\n        if (!state.isPaused) {\n            this.node.style.top = `${this.node.offsetTop - 5}px`;\n            this.checkForHitOnInvader();\n        }\n\n        requestAnimationFrame(this.update);\n    };\n\n    element = (): HTMLElement => {\n        return this.node;\n    };\n}\n\nexport default PlayerBullet;\n","import PlayerBullet from './player-bullet';\nimport { center, state } from './app';\nimport { sleep } from './utils';\n\nclass Player {\n    livesCount = 3;\n    scoreCount = 0;\n    x = 500;\n    moveID = 0;\n    node = document.createElement('div');\n    score = document.getElementById('score-count') as HTMLElement;\n    gun = document.getElementById('gun') as HTMLElement;\n    livesList = document.getElementById('lives-list') as HTMLElement;\n    bullets: PlayerBullet[] = [];\n    bullet: PlayerBullet | null = null;\n    onCoolDown = false;\n\n    constructor () {\n        this.node.id = 'player';\n    }\n\n    moveLeft = (): void => {\n        this.stopMoving();\n        if (this.node.offsetLeft > 0 && !state.isPaused) {\n            this.node.style.left = `${(this.x -= 5)}px`;\n            this.moveID = requestAnimationFrame(this.moveLeft);\n        }\n    };\n\n    moveRight = (): void => {\n        this.stopMoving();\n        if (this.node.offsetLeft < 1010 && !state.isPaused) {\n            this.node.style.left = `${(this.x += 5)}px`;\n            this.moveID = requestAnimationFrame(this.moveRight);\n        }\n    };\n\n    stopMoving = (): void => {\n        if (this.moveID) cancelAnimationFrame(this.moveID);\n    };\n\n    scorePoints = async (): Promise<void> => {\n        for (let i = 1; i <= 10; i++) {\n            this.scoreCount++;\n            this.score.textContent = this.scoreCount.toString();\n            await sleep(25);\n        }\n    };\n\n    fire = (): void => {\n        const x = this.node.offsetLeft + center;\n        this.bullet = new PlayerBullet(x, this.bullets);\n        this.bullets.push(this.bullet);\n        this.update();\n    };\n\n    update = (): void => {\n        if (this.bullet && !this.onCoolDown) {\n            this.gun.appendChild(this.bullet.element());\n            this.bullet.update();\n            this.onCoolDown = true;\n            sleep(250).then(() => (this.onCoolDown = false));\n        }\n    };\n\n    element = (): HTMLElement => {\n        return this.node;\n    };\n\n    // prettier-ignore\n    render = (): void => {\n        this.livesList.innerHTML = '<div class=\"life\"></div>'.repeat(this.livesCount);\n        (document.getElementById('player-zone') as HTMLElement).appendChild(this.node)\n    };\n}\n\nexport default Player;\n","import { center, earth, state, player } from './app';\nimport { rectOf, checkCollision } from './utils';\n\nclass InvaderBullet {\n    node = document.createElement('div');\n    bullets: InvaderBullet[];\n\n    constructor (bullets: InvaderBullet[]) {\n        this.node.className = 'bullet';\n        this.node.style.cssText = `bottom: 0; left: ${center}px`;\n        this.bullets = bullets;\n    }\n\n    remove = (): void => {\n        this.bullets.splice(this.bullets.indexOf(this), 1);\n        this.node.remove();\n    };\n\n    checkForHitOnPlayer = (): void => {\n        if (player.element()) {\n            if (checkCollision(rectOf(this.node), rectOf(player.element()))) {\n                this.remove();\n                player.element().remove();\n            }\n            if (this.node.offsetTop >= earth.offsetHeight) {\n                this.remove();\n            }\n        }\n    };\n\n    update = (): void => {\n        if (!state.isPaused) {\n            this.node.style.top = `${this.node.offsetTop + 5}px`;\n            this.checkForHitOnPlayer();\n        }\n        requestAnimationFrame(this.update);\n    };\n\n    element = (): HTMLElement => {\n        return this.node;\n    };\n}\n\nexport default InvaderBullet;\n","import InvaderBullet from './invader-bullet';\n\nclass Invader {\n    node = document.createElement('div');\n    bullets: InvaderBullet[] = [];\n    bullet: InvaderBullet | null = null;\n    coordinates: [number, number];\n\n    constructor (numA: number, numB: number) {\n        this.node.className = 'invader';\n        this.coordinates = [numA, numB];\n    }\n\n    remove = (): void => {\n        this.element().remove();\n    };\n\n    fire = (): void => {\n        this.bullet = new InvaderBullet(this.bullets);\n        this.bullets.push(this.bullet);\n        this.update();\n    };\n\n    update = (): void => {\n        if (this.bullet) {\n            this.node.appendChild(this.bullet.element());\n            this.bullet.update();\n        }\n    };\n\n    element = (): HTMLElement => {\n        return this.node;\n    };\n}\n\nexport default Invader;\n","import {\n    columns,\n    state,\n    earth,\n    ROW_LENGTH,\n    COLUMN_LENGTH,\n    SHIP_HEIGHT\n} from './app';\nimport { random, rectOf } from './utils';\nimport Invader from './invader';\n\nexport const intervals = {\n    attack: null as number | null,\n    moveDown: null as number | null\n};\n\nconst speed = {\n    slow: 1500,\n    normal: 1000,\n    fast: 500\n};\n\ntype Matrix = Invaders[][];\n\nconst createMatrix = (): Matrix => {\n    const matrix: any[] = [];\n    let arr;\n\n    for (let i = 0; i < COLUMN_LENGTH; i++) {\n        arr = [];\n\n        for (let j = 0; j < ROW_LENGTH; j++) {\n            arr.push(new Invader(i, j));\n        }\n\n        matrix.push(arr);\n    }\n\n    return matrix;\n};\n\ninterface Dimensions {\n    right: number;\n    left: number;\n    x: number;\n    y: number;\n}\n\nconst RIGHT = 'RIGHT';\nconst LEFT = 'LEFT';\n\nclass Invaders {\n    matrix: Matrix = createMatrix();\n    invaderElements = document.getElementById('invader-column-list') as HTMLElement; // prettier-ignore\n    earthDims: Dimensions;\n    direction = RIGHT;\n    x = 0;\n    y = 0;\n\n    constructor () {\n        this.earthDims = rectOf(earth);\n    }\n\n    getDimensions = (): Dimensions => {\n        return rectOf(this.invaderElements);\n    };\n\n    checkWall = (): void => {\n        const { right, left } = this.getDimensions();\n        if (right >= this.earthDims.right) this.direction = LEFT;\n        if (left <= this.earthDims.left) this.direction = RIGHT;\n    };\n\n    moveRight = (): void => {\n        this.invaderElements.style.right = `${(this.x -= 1)}px`;\n        this.checkWall();\n    };\n\n    moveLeft = (): void => {\n        this.invaderElements.style.right = `${(this.x += 1)}px`;\n        this.checkWall();\n    };\n\n    moveDown = (): void => {\n        if (!state.isPaused) {\n            this.invaderElements.style.top = `${(this.y += SHIP_HEIGHT)}px`;\n        }\n    };\n\n    updateMoving = (): void => {\n        if (!state.isPaused) {\n            if (this.direction === RIGHT) this.moveRight();\n            if (this.direction === LEFT) this.moveLeft();\n        }\n\n        requestAnimationFrame(this.updateMoving);\n    };\n\n    updateBottom = (): any[] => {\n        return this.matrix.map(column => {\n            return column[column.length - 1];\n        });\n    };\n\n    updateAttack = (): void => {\n        if (!state.isPaused) {\n            const bottomInvaders: Invader[] = this.updateBottom();\n            const idx = random(0, COLUMN_LENGTH - 1);\n\n            if (bottomInvaders[idx]) {\n                bottomInvaders[idx].fire();\n            }\n        }\n    };\n\n    removeInvader = (invader: Invader): void => {\n        const [col, row] = invader.coordinates;\n\n        this.matrix[col].splice(row, 1);\n        invader.remove();\n    };\n\n    update = (): void => {\n        this.updateMoving();\n        intervals.attack = setInterval(this.updateAttack, speed.normal);\n        intervals.moveDown = setInterval(this.moveDown, 10000);\n    };\n\n    render = (): void => {\n        const cols = [...columns];\n        let children: Element[];\n\n        this.matrix.forEach((invaders, i) => {\n            children = invaders.map((invader: any) => {\n                return (invader as Invader).element();\n            });\n\n            cols[i].append(...children);\n        });\n    };\n}\n\nexport default Invaders;\n","class State {\n    isPaused = true;\n    gameIsOver = false;\n\n    togglePause = (): void => {\n        this.isPaused = !this.isPaused;\n    };\n\n    setPause = (bool: boolean): void => {\n        this.isPaused = bool;\n    };\n\n    setGameIsOver = (bool: boolean): void => {\n        this.setPause(bool);\n        this.gameIsOver = bool;\n    };\n}\n\nexport default State;\n","import { loadGame, state, btnGroup } from './app';\nimport { intervals } from './invaders';\n\nconst Button = (text: string, id?: string) => {\n    const btn = document.createElement('button');\n    if (id) btn.id = id;\n    btn.textContent = text;\n    btn.className = 'btn';\n\n    return btn;\n};\n\nconst decorateWide = (btn: HTMLElement) => {\n    btn.classList.add('btn--wide');\n\n    return btn;\n};\n\nclass Controls {\n    resetBtn = Button('RESET');\n    playBtn = Button('PLAY');\n    pauseBtn = Button('PAUSE');\n\n    constructor () {\n        decorateWide(this.resetBtn);\n        this.resetBtn.addEventListener('click', () => {\n            if (intervals.attack !== null) clearInterval(intervals.attack);\n            if (intervals.moveDown !== null) clearInterval(intervals.moveDown);\n            loadGame();\n        });\n\n        decorateWide(this.playBtn);\n        this.playBtn.addEventListener('click', () => {\n            if (btnGroup.contains(this.playBtn)) {\n                state.setPause(false);\n                btnGroup.appendChild(this.pauseBtn);\n                btnGroup.removeChild(this.playBtn);\n            }\n        });\n\n        decorateWide(this.pauseBtn);\n        this.pauseBtn.addEventListener('click', () => {\n            if (btnGroup.contains(this.pauseBtn)) {\n                state.setPause(true);\n                btnGroup.appendChild(this.playBtn);\n                btnGroup.removeChild(this.pauseBtn);\n            }\n        });\n    }\n\n    pause = (): void => {\n        this.pauseBtn.click();\n    };\n\n    play = (): void => {\n        this.playBtn.click();\n    };\n\n    render = (): void => {\n        btnGroup.append(this.resetBtn, this.playBtn);\n    };\n}\n\nexport default Controls;\n","import 'regenerator-runtime/runtime';\n\nimport Player from './player';\nimport Invaders from './invaders';\nimport State from './state';\nimport Controls from './controls';\n\n// prettier-ignore\nexport const LEFT_ARROW = 37,\n             RIGHT_ARROW = 39,\n             DOWN_ARROW = 40,\n             SPACE_BAR = 32,\n             SHIP_WIDTH = 90,\n             SHIP_HEIGHT = 50,\n             BULLET_WIDTH = 6,\n             COLUMN_LENGTH = 10,\n             ROW_LENGTH = 5;\n\n// prettier-ignore\nexport let player: Player,\n           invaders: Invaders,\n           state: State,\n           controls: Controls,\n           container: HTMLElement,\n           columns: HTMLCollection,\n           btnGroup: HTMLElement,\n           earth: HTMLElement\n\nexport const center = (SHIP_WIDTH / 2) - (BULLET_WIDTH / 2); // prettier-ignore\n\nconst onKeydown = (e: KeyboardEvent): void => {\n    if (!state.isPaused) {\n        if (e.keyCode === LEFT_ARROW) player.moveLeft();\n        if (e.keyCode === RIGHT_ARROW) player.moveRight();\n        if (e.keyCode === DOWN_ARROW) player.stopMoving();\n        if (e.keyCode === SPACE_BAR) player.fire();\n    }\n};\n\nconst initHTML = () => {\n    document.body.innerHTML = `\n        <div id=\"container\">\n            <div id=\"header\">\n                <div id=\"btn-group\">\n                </div>\n                <div id=\"score\">\n                    <span>SCORE:</span>&nbsp;<span id=\"score-count\">0</span>\n                </div>\n                <div id=\"lives\">\n                    <span>LIVES:</span>\n                    <ul id=\"lives-list\"></ul>\n                </div>\n            </div>\n\n            <div id=\"earth\">\n                <ul id=\"invader-column-list\">\n                    ${`<li class=\"invader-column\"></li>`.repeat(10)}\n                </ul>\n                <div id=\"player-zone\">\n                    <div id=\"gun\"></div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    columns = document.getElementsByClassName('invader-column') as HTMLCollection; // prettier-ignore\n    container = document.getElementById('container') as HTMLElement;\n    btnGroup = document.getElementById('btn-group') as HTMLElement;\n    earth = document.getElementById('earth') as HTMLElement;\n};\n\nexport const loadGame = (): void => {\n    initHTML();\n\n    state = new State();\n\n    controls = new Controls();\n    controls.render();\n\n    invaders = new Invaders();\n    invaders.render();\n    invaders.update();\n\n    player = new Player();\n    player.render();\n\n    window.addEventListener('keydown', onKeydown);\n    window.addEventListener('blur', controls.pause);\n};\n\nwindow.addEventListener('load', loadGame);\n"]}